{"version":3,"sources":["SearchBox.js","SearchResult.js","Header.js","Waiting.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","display","alignItems","width","height","input","marginLeft","spacing","flex","iconButton","divider","margin","SearchBox","props","classes","Grid","container","direction","justify","Box","p","Paper","component","className","InputBase","placeholder","inputProps","value","searchValue","onChange","e","setSearchValue","target","IconButton","type","onClick","preventDefault","setIsSearched","setResult","params","search","query_params","URLSearchParams","fetch","method","headers","then","response","json","data","console","log","justifyContent","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","result","map","row","src","image_url","Typography","song_name","artist","bpm","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","logo","cursor","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","PrimarySearchAppBar","AppBar","position","Toolbar","pr","reset","variant","noWrap","window","open","Waiting","CircularProgress","createTheme","palette","primary","main","contrastText","App","useState","isSearched","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40cd844c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: \"65vw\",\n        height: 55,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function SearchBox(props) {\n    const classes = useStyles();\n\n    const handleSearchInputChanges = (e) => {\n        props.setSearchValue(e.target.value);\n    }\n\n\n    const getBpms = (e) => {\n        e.preventDefault()\n        props.setIsSearched(true)\n        props.setResult(null)\n        const params = { // 渡したいパラメータをJSON形式で書く\n            search: props.searchValue\n        };\n        const query_params = new URLSearchParams(params)\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n        fetch('https://bpm-searcher.herokuapp.com/api?' + query_params, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                props.setResult(data)\n            });\n    }\n\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n        >\n            <Box p={4}>\n                <Paper component=\"form\" className={classes.root}>\n                    <InputBase\n                        className={classes.input}\n                        placeholder=\"Search Songs or Artists\"\n                        inputProps={{ 'aria-label': 'search songs or artists' }}\n                        value={props.searchValue}\n                        onChange={handleSearchInputChanges}\n                    />\n                    <IconButton type=\"submit\" className={classes.iconButton} onClick={getBpms} aria-label=\"search\">\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </Box>\n        </Grid>\n        \n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\nexport default function SearchBox(props) {\n\n    return (\n        <Box width={1}  display=\"flex\" justifyContent=\"center\">\n            <Box width={0.85} justifyContent=\"center\">\n                <TableContainer component={Paper}>\n                    <Table  aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">\n                                    <div>SONG</div>\n                                    {/* <div>ARTIST</div> */}\n                                </TableCell>\n                                <TableCell></TableCell>\n                                {/* <TableCell>ARTIST</TableCell> */}\n                                {/* <TableCell>ALBUM</TableCell> */}\n                                <TableCell>BPM</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {props.result.map((row) => (\n                            <TableRow key={row.song_name}>\n                                <TableCell align=\"center\">\n                                    <img src={row.image_url} height=\"100\"/>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>{row.song_name}</Typography>\n                                    <div>{row.artist}</div>\n                                </TableCell>\n                                {/* <TableCell>{row.artist}</TableCell> */}\n                                {/* <TableCell>{row.album_name}</TableCell> */}\n                                <TableCell><Typography>{row.bpm}</Typography></TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Box>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n      cursor: 'pointer'\n    },\n    logo:{\n        cursor: 'pointer'\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n    const classes = useStyles();\n\n    const onClickGithub = () => {\n        const url = 'https://github.com/ooyamatakehisa/bpm-searcher'\n        window.open(url, '_blank')\n    }\n\n    \n    return (\n        <div className={classes.grow}>\n        <AppBar position=\"static\">\n            <Toolbar>\n            {/* <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n            >\n                <MenuIcon />\n            </IconButton> */}\n            <Box pr={2} className={classes.logo} onClick={props.reset}>\n                <img src=\"./favicon.svg\" height=\"25\" />\n            </Box>\n            <Typography className={classes.title} variant=\"h6\" noWrap onClick={props.reset}>\n                BPM Searcher\n            </Typography>\n            <div className={classes.grow} />\n\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" onClick={onClickGithub}>\n                <GitHubIcon />\n            </IconButton>\n\n            </Toolbar>\n        </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function Waiting(props) {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n        >\n            <CircularProgress />\n        </Grid>\n    );\n}\n","import React, { useState } from 'react';\nimport SearchBox from './SearchBox'\nimport AppDesc from './AppDesc'\nimport SearchResult from './SearchResult'\nimport Header from './Header'\nimport Waiting from './Waiting'\n\nimport { createTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#da0047',\n            contrastText: '#fff',\n        },\n    }\n});\n\nfunction App() {\n    const [isSearched, setIsSearched] = useState(false);\n    const [result, setResult] = useState(null);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const reset = () => {\n        setIsSearched(false)\n        setResult(null)\n        setSearchValue(\"\")\n    }\n\n    return (\n        <MuiThemeProvider theme={ theme }>\n            <header>\n                <Header reset={ reset }/>\n            </header>\n            <body>\n                <SearchBox\n                    setIsSearched={ setIsSearched }\n                    setResult={ setResult }\n                    searchValue={ searchValue }\n                    setSearchValue={ setSearchValue }\n                />\n                {/* {!isSearched && <AppDesc />} */}\n                {(isSearched && result === null) && <Waiting />}\n                {result !== null && <SearchResult result={ result }/>}\n            </body>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}